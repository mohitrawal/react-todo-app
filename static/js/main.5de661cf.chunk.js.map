{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","handleInput","setState","currentTodo","Date","now","saveTodo","preventDefault","newItem","state","todoItems","deleteTodo","filteredItems","filter","onSubmit","this","placeholder","ListItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA6BeA,MAxBf,SAAmBC,GACf,IACOC,EADOD,EAAME,MACOC,KAAI,SAAAC,GACvB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACA,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GACjEZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAC7B,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAAQC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cALjEJ,EAAKI,QAY/C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eCjBjBmB,IAAQC,IAAIC,K,IAkEGC,E,kDA/DX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IASVwB,YAAc,SAACZ,GACX,EAAKa,SAAS,CACVC,YAAY,CACRhB,KAAKE,EAAEE,OAAOL,MACdD,IAAImB,KAAKC,UAdF,EAkBnBC,SAAW,SAACjB,GACRA,EAAEkB,iBACF,IAAMC,EAAU,EAAKC,MAAMN,YAC3B,GAAoB,KAAjBK,EAAQrB,KAAa,CACpB,IAAMR,EAAK,sBAAO,EAAK8B,MAAMC,WAAlB,CAA6BF,IACxC,EAAKN,SAAS,CACVQ,UAAU/B,EACVwB,YAAa,CACThB,KAAK,GACLF,IAAI,QA3BD,EAgCnB0B,WAAa,SAAC1B,GACV,IAAM2B,EAAe,EAAKH,MAAMC,UAAUG,QAAO,SAAAhC,GAAI,OAAIA,EAAKI,MAAMA,KACpE,EAAKiB,SAAS,CACVQ,UAAWE,KAnCA,EAsCnBtB,UAAW,SAACH,EAAKF,GACb,IAAMN,EAAQ,EAAK8B,MAAMC,UACzB/B,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAMA,MAGf,EAAKe,SAAS,CACVQ,UAAW/B,KA5Cf,EAAK8B,MAAQ,CACTC,UAAW,GACXP,YAAa,CACThB,KAAK,GACLF,IAAI,KANG,E,qDAkDf,OACI,sBAAKH,UAAU,MAAf,UACI,iCACI,uBAAME,GAAG,OAAO8B,SAAUC,KAAKT,SAA/B,UACI,uBAAOvB,KAAK,OAAOiC,YAAY,oBAAoB9B,MAAO6B,KAAKN,MAAMN,YAAYhB,KAAMC,SAAU2B,KAAKd,cACtG,wBAAQlB,KAAK,SAAb,sBAGR,cAACkC,EAAD,CAAUtC,MAAOoC,KAAKN,MAAMC,UAAWhB,WAAYqB,KAAKJ,WAAYrB,UAAWyB,KAAKzB,mB,GA3DlF4B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5de661cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './listItem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const  listItems   = items.map(item => {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n                    <span>\r\n                        <FontAwesomeIcon className=\"faicons\" icon=\"trash\" onClick={() => props.deleteItem(item.key)} />\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        })\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n            </FlipMove>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default ListItems;","import React from 'react';\nimport './App.css';\nimport ListItem from './ListItem';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoItems: [],\n            currentTodo: {\n                text:'',\n                key:''\n            }\n        }\n    }\n    handleInput = (e) =>{\n        this.setState({\n            currentTodo:{\n                text:e.target.value,\n                key:Date.now()\n            }\n        })\n    }\n    saveTodo = (e) =>{\n        e.preventDefault();\n        const newItem = this.state.currentTodo;\n        if(newItem.text !== \"\") {\n            const items = [...this.state.todoItems, newItem] //Destructive assignment\n            this.setState({\n                todoItems:items,\n                currentTodo: {\n                    text:'',\n                    key:''\n                }\n            })\n        }\n    }\n    deleteTodo = (key) => {\n        const filteredItems= this.state.todoItems.filter(item => item.key!==key);\n        this.setState({\n            todoItems: filteredItems\n        });\n    }\n    setUpdate= (text,key) =>{\n        const items = this.state.todoItems;\n        items.map(item=>{      \n          if(item.key===key){\n            item.text= text;\n          }\n        })\n        this.setState({\n            todoItems: items\n        })\n    }\n    render() {\n        return(\n            <div className=\"App\">\n                <header>\n                    <form id=\"todo\" onSubmit={this.saveTodo}>\n                        <input type=\"text\" placeholder=\"Please enter text\" value={this.state.currentTodo.text} onChange={this.handleInput}/>\n                        <button type=\"submit\">Add</button>\n                    </form>\n                </header>\n                <ListItem items={this.state.todoItems} deleteItem={this.deleteTodo} setUpdate={this.setUpdate}/>\n            </div>\n        );\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}